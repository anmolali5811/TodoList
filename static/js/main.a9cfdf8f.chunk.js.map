{"version":3,"sources":["components/Todo.js","App.js","index.js"],"names":["Todo","useState","localitems","localStorage","getItem","JSON","parse","getLocalItems","items","additems","data","setdata","update","setupdate","idupdate","setidupdate","useEffect","setItem","stringify","className","type","value","onChange","e","target","placeholder","onClick","map","curelem","id","Date","getTime","toString","alert","length","key","uitems","find","updateitem","ditems","filter","deleteitem","App","ReactDOM","render","document","getElementById"],"mappings":"0MAuGeA,EA7FF,WAAO,IAAD,EACWC,mBATR,WAClB,IAAIC,EAAaC,aAAaC,QAAQ,cACtC,OAAIF,EACOG,KAAKC,MAAMJ,GAEX,GAIwBK,IADpB,mBACRC,EADQ,KACDC,EADC,OAESR,mBAAS,IAFlB,mBAERS,EAFQ,KAEFC,EAFE,OAGaV,oBAAS,GAHtB,mBAGRW,EAHQ,KAGAC,EAHA,OAIiBZ,mBAAS,MAJ1B,mBAIRa,EAJQ,KAIEC,EAJF,KAMfC,qBAAU,WACNb,aAAac,QAAQ,aAAaZ,KAAKa,UAAUV,MACnD,CAACA,IAwCH,OACI,oCACA,wBAAIW,UAAU,WAAd,aAEA,yBAAKA,UAAW,QACZ,2BAAOC,KAAK,OAAOC,MAAOX,EACtBY,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOH,QAClCI,YAAc,eAElB,4BAAQC,QA/CE,WACVhB,EAEMA,GAAQE,GACdH,EACID,EAAMmB,KAAI,SAACC,GACR,OAAIA,EAAQC,KAAOf,EACf,2BAAWc,GAAX,IAAqBlB,KAAMA,IAExBkB,MAGdf,GAAU,GACVF,EAAQ,IACRI,EAAY,QAGZN,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACqB,IAAI,IAAIC,MAAOC,UAAUC,WAAWtB,KAAOA,MAC/DC,EAAQ,KAhBRsB,MAAM,uBA+CFrB,EAAS,SAAW,OAKpBJ,EAAM0B,OAAO,EAAI,4BAAQR,QAnBnB,SAACG,GACfpB,EAAS,MAkBgB,eAAqD,IAK9E,yBAAKU,UAAU,SAEf,4BACIX,EAAM0B,OAAO,EAAb,6BAAuC1B,EAAM0B,QAAW,qBAGxD1B,EAAMmB,KAAI,SAACC,GACP,OACA,yBAAKT,UAAU,OAAOgB,IAAKP,EAAQC,IACnC,2BAAID,EAAQlB,MACZ,yBAAKS,UAAU,QACf,4BAAQO,QAAS,kBA3CV,SAACG,GAChB,IAAMO,EAAS5B,EAAM6B,MAAK,SAACT,GACvB,OAAOA,EAAQC,KAAOA,KAE1BhB,GAAU,GACVF,EAAQyB,EAAO1B,MACfK,EAAYc,GAqCkBS,CAAWV,EAAQC,MAAzC,KACA,4BAAQH,QAAS,kBAlDV,SAACG,GAChB,IAAMU,EAAS/B,EAAMgC,QAAO,SAACZ,GACzB,OAAOA,EAAQC,KAAOA,KAE1BpB,EAAS8B,GA8CqBE,CAAWb,EAAQC,MAAzC,aChFDa,MATf,WACE,OACE,oCACE,kBAAC,EAAD,QCANC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.a9cfdf8f.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\n\r\nconst getLocalItems = ()=>{\r\n    let localitems = localStorage.getItem(\"localitems\");\r\n    if (localitems) {\r\n        return JSON.parse(localitems);\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\nconst Todo = () => {\r\n    const [items, additems] = useState(getLocalItems());\r\n    const [data, setdata] = useState(\"\");\r\n    const [update, setupdate] = useState(false);\r\n    const [idupdate, setidupdate] = useState(null);\r\n    \r\n    useEffect(() =>{\r\n        localStorage.setItem(\"localitems\",JSON.stringify(items));\r\n    },[items])\r\n\r\n    const addinlist = ()=>{\r\n       if (!data) {\r\n            alert(\"Enter data to add\")\r\n        }else if (data && update) {\r\n            additems(\r\n                items.map((curelem) =>{\r\n                   if (curelem.id === idupdate) {\r\n                       return{ ...curelem , data: data}\r\n                   }\r\n                   return curelem;\r\n                })\r\n            )\r\n            setupdate(false);\r\n            setdata(\"\");\r\n            setidupdate(null);\r\n        }\r\n        else{\r\n            additems([...items,{id: new Date().getTime().toString(),data : data}]);\r\n            setdata(\"\");\r\n        }\r\n    }\r\n    const deleteitem = (id) => {\r\n        const ditems = items.filter((curelem) =>{\r\n            return curelem.id !== id;\r\n        });\r\n        additems(ditems)\r\n    }\r\n    const updateitem = (id) => {\r\n        const uitems = items.find((curelem) =>{\r\n            return curelem.id === id;\r\n        });\r\n        setupdate(true);\r\n        setdata(uitems.data);\r\n        setidupdate(id);\r\n    }\r\n    const deleteall = (id) => {\r\n        additems([]);\r\n    }\r\n    return (\r\n        <>\r\n        <h1 className=\"heading\">Todo List</h1>\r\n\r\n        <div className= \"main\">\r\n            <input type=\"text\" value={data}\r\n                onChange={(e) => setdata(e.target.value)}\r\n                placeholder = \"Enter data\"\r\n            />\r\n            <button onClick ={addinlist} >\r\n            {\r\n                update ? \"Update\" : \"Add\"\r\n            }\r\n            </button>\r\n            \r\n            {\r\n                items.length>0 ? <button onClick ={deleteall} >Delete All </button> : \"\"\r\n            }\r\n           \r\n        </div>\r\n        \r\n        <div className=\"items\">\r\n        \r\n        <h1>{\r\n            items.length>0 ? `Number of lists is ${items.length}` : \"No data available\"\r\n        }</h1>\r\n        {\r\n            items.map((curelem) =>{\r\n                return (\r\n                <div className=\"item\" key={curelem.id}>\r\n                <p>{curelem.data}</p>\r\n                <div className=\"btns\">\r\n                <button onClick={()=> updateitem(curelem.id)}>U</button>\r\n                <button onClick={()=> deleteitem(curelem.id)}>D</button>\r\n                </div>\r\n            </div>\r\n                )\r\n            })\r\n        }\r\n               \r\n        </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport Todo from \"./components/Todo\";\nfunction App() {\n  return (\n    <>\n      <Todo />\n    </>\n\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}